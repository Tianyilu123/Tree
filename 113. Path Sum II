
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> one = new ArrayList<>();
        search(res, one, root, 0, sum);
        return res;
    }
    
    private void search(List<List<Integer>> res, List<Integer> one, 
                        TreeNode root, int cur, int sum) {
        if(root == null) return;
        int val = root.val + cur;
        if(root.left == null && root.right == null) {
            if(val == sum) {
                List<Integer> tmp = new ArrayList<>(one);
                tmp.add(root.val);
                res.add(tmp);
                return;
            } else {
                return;
            }
        }
        one.add(root.val);
        search(res, one, root.left, val, sum);
        search(res, one, root.right, val, sum);
        one.remove(one.size()-1);
    }
}
