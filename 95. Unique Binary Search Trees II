
class Solution {
    public List<TreeNode> generateTrees(int n) {
        if(n<=0) return new ArrayList<>();
        return helper(1, n);
    }
    
    private List<TreeNode> helper(int start, int end) {
        List<TreeNode> res = new ArrayList<>();
        if(start > end) {
            res.add(null);
            return res;
        }
        for(int i=start; i<=end; i++) {
            List<TreeNode> Left = helper(start, i-1);
            List<TreeNode> Right = helper(i+1, end);
            
            for(TreeNode left : Left) {
                for(TreeNode right : Right) {
                    TreeNode root = new TreeNode(i);
                    root.left = left;
                    root.right = right;
                    res.add(root);
                }
            }
        }
        return res;
    }
}


// time: unknown
// space: unknown
