
class Solution {
    int max = 0;
    int min = 0;
    public List<List<Integer>> verticalOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;
        helper(root, 0);
        for(int i=min; i<=max; i++) {
            res.add(new ArrayList<>());
        }
        Queue<TreeNode> value = new LinkedList<>();
        Queue<Integer> index = new LinkedList<>();
        value.offer(root);
        index.offer(-min);
        while(!value.isEmpty()) {
            TreeNode cur = value.poll();
            int idx = index.poll();
            res.get(idx).add(cur.val);
            if(cur.left != null) {
                value.offer(cur.left);
                index.offer(idx-1);
            }
            if(cur.right != null) {
                value.offer(cur.right);
                index.offer(idx+1);
            }
        }
        return res;
    }
    
    private void helper(TreeNode root, int idx) {
        if(root == null) return;
        max = Math.max(max, idx);
        min = Math.min(min, idx);
        helper(root.left, idx-1);
        helper(root.right, idx+1);
    }
}
