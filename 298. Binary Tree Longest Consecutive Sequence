
class Solution {
    private int max = 0;
    
    public int longestConsecutive(TreeNode root) {
        if(root == null)
            return 0;
        helper(root);
        return max;
    }
    
    private int helper(TreeNode root) {
        if(root == null)
            return 0;
        int leftLen = helper(root.left);
        int rightLen = helper(root.right);
        
        int localLen = 1;
        if(root.left != null && root.val + 1 == root.left.val)
            localLen = leftLen + 1;
        if(root.right != null && root.val + 1 == root.right.val)
            localLen = Math.max(localLen, rightLen+1);
        
        max = Math.max(localLen, max);
        return localLen;
    }
}
