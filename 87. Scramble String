class Solution {
    public boolean isScramble(String s1, String s2) {
        if(s1.length() != s2.length()) return false;
        if(!isSame(s1, s2)) return false;
        return dfs(s1, s2);
    }
    
    private boolean dfs(String s1, String s2) {
        if(s1.equals(s2)) return true;
        if(s1.length() == 2 && s2.length() == 2 && s1.charAt(0) == s2.charAt(1) && 
          s1.charAt(1) == s2.charAt(0)) return true;
        
        for(int i=0; i<s1.length()-1; i++) {
            String s11 = s1.substring(0, i+1);
            String s12 = s1.substring(i+1, s1.length());
            String s21 = s2.substring(0, i+1);
            String s22 = s2.substring(i+1, s2.length());
            
            if(isSame(s11, s21) && isSame(s12, s22) && dfs(s11, s21) && dfs(s12, s22))
                return true;
            
            s21 = s2.substring(s2.length()-1-i, s2.length());
            s22 = s2.substring(0, s2.length()-1-i);
            
            if(isSame(s11, s21)&& isSame(s12, s22) && dfs(s11, s21) && dfs(s12,s22)) 
                return true;
        }
        return false;
    }
    
    private boolean isSame(String s1, String s2) {
        int[] count = new int[26];
        
        for(int i=0; i<s1.length(); i++) {
            int idx = s1.charAt(i)-'a';
            count[idx]++;
            idx = s2.charAt(i)-'a';
            count[idx]--;
        }
        
        for(int i=0; i<26; i++) {
            if(count[i] != 0)
                return false;
        }
        return true;
    }
}
