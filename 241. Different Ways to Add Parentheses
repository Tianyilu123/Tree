
class Solution {
    public List<Integer> diffWaysToCompute(String input) {
        List<Integer> res = new ArrayList<>();
        boolean signalNum = true;
        for(int i=0; i<input.length(); i++) {
            char c = input.charAt(i);
            if(c=='+' || c=='-' || c == '*') {
                signalNum = false;  
                List<Integer> left = diffWaysToCompute(input.substring(0,i));
                List<Integer> right = diffWaysToCompute(input.substring(i+1, input.length()));
                List<Integer> one = combine(left, right, c);
                res.addAll(one);
            }
        }
        if(signalNum)
            res.add(Integer.valueOf(input));
        return res;
    }
    
    private List<Integer> combine(List<Integer> Left, List<Integer> Right, char optr) {
        List<Integer> res = new ArrayList<>();
        for(int left : Left) {
            for(int right : Right) {
                int result = 0;
                if(optr == '+') result = left + right;
                if(optr == '-') result = left - right;
                if(optr == '*') result = left * right;
                res.add(result);
            }
        }
        return res;
    }
}
