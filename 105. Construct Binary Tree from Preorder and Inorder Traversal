
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helper(preorder, 0, preorder.length-1, inorder, 0, inorder.length-1);
    }
    
    private TreeNode helper(int[] pr, int p_begin, int p_end, int[] in, int i_begin, int i_end) {
        
        if(i_begin > i_end) return null;
        
        int val = pr[p_begin];
        TreeNode root = new TreeNode(val);
        int i=0; 
        
        for(i = i_begin; i<i_end; i++) {
            if(in[i] == val)
                break;
        }
        
        root.left = helper(pr, p_begin+1, p_begin+1+i-1-i_begin, in, i_begin, i-1);
        root.right = helper(pr, p_begin+i-i_begin+1, p_end, in, i+1, i_end);
        return root;
    }
}
