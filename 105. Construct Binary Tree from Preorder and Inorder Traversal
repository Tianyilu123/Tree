
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder == null || inorder == null) return null;
        return helper(preorder, 0, inorder, 0, inorder.length);
    }
    
    private TreeNode helper(int[] preorder, int preStart, int[] inorder, int inStart, int inEnd) {
        if(preStart == preorder.length || inStart > inEnd) return null;
        int inIdx = 0;
        for(int i=0; i<inorder.length; i++) {
            if(inorder[i] == preorder[preStart]) {
                inIdx = i;
                break; 
            }
        }
        TreeNode root = new TreeNode(inorder[inIdx]);
        root.left = helper(preorder, preStart+1 ,inorder, inStart, inIdx-1);
        root.right = helper(preorder,preStart+inIdx-inStart+1, inorder, inIdx+1, inEnd);
        return root;
    }
}


// time: O(n)
//space: O(n)
